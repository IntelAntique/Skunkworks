import pandas as pd
from pymatgen.core.composition import Composition


# data generated by chatgpt
llm_data = pd.read_csv('metallic.csv')

# ground trush data
gtd_data = pd.read_csv('full_data.csv')

# function used to check if two compositions are the same
def is_same_composition(comp1, comp2):
    return Composition(comp1).reduced_formula == Composition(comp2).reduced_formula

# function used to check if the values are within 10% of each other
def is_within_10_percent(value1, value2):
    return abs(value1 - value2) / max(value1, value2) * 100 <= 10

true_count = 0
false_count = 0
unknown_count = 0

for index, llm_row in llm_data.iterrows():
    llm_material = llm_row['Material']
    llm_value = llm_row['Value']

    # check if LLM material matches a GTD entry
    matching_gtd_entries = gtd_data[gtd_data['composition'].apply(lambda x: is_same_composition(x, llm_material))]

    if not matching_gtd_entries.empty:
        # LLM material matches a GTD entry
        for index, gtd_row in matching_gtd_entries.iterrows():
            gtd_value = gtd_row['dmax']

            # Check if the values are within 10%
            if is_within_10_percent(llm_value, gtd_value):
                true_count += 1
            else:
                false_count += 1
    else:
        # LLM material does not match any GTD entry
        unknown_count += 1

# calculate fractions
total_entries = len(llm_data)
fraction_true = true_count / total_entries
fraction_false = false_count / total_entries
fraction_unknown = unknown_count / total_entries

# print results
print(f"Fraction True: {fraction_true}")
print(f"Fraction False: {fraction_false}")
print(f"Fraction Unknown: {fraction_unknown}")
print(f"Total Entries: {total_entries}")
